<!DOCTYPE html>
<html lang="fr">
<head>
  <link rel="icon" href="/favicon.ico">
  <meta charset="UTF-8">
  <title>Ajouter des amis</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center">
  <div class="bg-white p-8 rounded shadow-md w-full max-w-lg">
    <h1 class="text-2xl font-bold text-center mb-6 text-blue-700">🔍 Rechercher des amis</h1>

    <input id="search-input" type="text" placeholder="Nom d'utilisateur ou email"
           class="w-full border px-4 py-2 rounded mb-4 shadow-sm" />

    <div id="search-results" class="space-y-2"></div>
    <pre id="search-log" class="text-sm text-red-600 mt-4"></pre>
  </div>
  <label for="user-id">👤 Utilisateur simulé :</label>
<select id="user-id" class="border px-2 py-1 rounded mb-4">
  <option value="1">Utilisateur 1</option>
  <option value="2">Utilisateur 2</option>
  <option value="3">Utilisateur 3</option>
</select>
<h2 class="text-xl font-bold mt-8 mb-2">💌 Demandes reçues</h2>
<div id="incoming-requests" class="space-y-2"></div>

<h2 class="text-xl font-bold mt-8 mb-2">👫 Amis</h2>
<div id="friend-list" class="space-y-2"></div>

<script>
document.getElementById('search-input').addEventListener('input', async (e) => {
  const q = e.target.value.trim();
  const container = document.getElementById('search-results');
  container.innerHTML = '';

  if (q.length < 2) return;

  const currentUserId = parseInt(document.getElementById('user-id').value);

  try {
    const res = await fetch(`/users/search?q=${encodeURIComponent(q)}`);
    const users = await res.json();

    if (!Array.isArray(users)) {
      container.textContent = "Aucun résultat.";
      return;
    }

    const filteredUsers = users.filter(user => user.id !== currentUserId);

    if (filteredUsers.length === 0) {
      container.textContent = "Aucun utilisateur trouvé.";
      return;
    }

    filteredUsers.forEach(user => {
      const div = document.createElement('div');
      div.innerHTML = `
        <div class="flex justify-between items-center border p-2 rounded shadow-sm">
          <span><strong>${user.display_name}</strong> (@${user.username})</span>
          <button class="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600" onclick="sendFriendRequest(${user.id})">
            Ajouter
          </button>
        </div>
      `;
      container.appendChild(div);
    });
  } catch (err) {
    container.textContent = "Erreur serveur.";
    console.error("❌ Erreur lors de la recherche :", err);
  }
});


async function sendFriendRequest(addresseeId) {
  try {
    const requesterId = document.getElementById('user-id').value;
 // ou à adapter selon ton système
	if (!requesterId) {
  alert("❌ Vous devez être connecté pour envoyer une demande.");
  return;
}

    const res = await fetch('/users/request', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ requester_id: parseInt(requesterId), addressee_id: addresseeId })
    });

    const result = await res.json();
    if (result.success) {
      alert("✅ Demande envoyée !");
    } else {
      alert("❌ " + result.error);
    }
  } catch (err) {
    alert("Erreur lors de l’envoi de la demande.");
  }
}
async function refreshFriendData() {
  const userId = Number(document.getElementById('user-id').value);


  
  // Demandes reçues
  const res1 = await fetch(`/users/incoming/${userId}`);
const incoming = await res1.json();
console.log("📦 Résultat de /users/incoming:", incoming);


const incomingDiv = document.getElementById('incoming-requests');
incomingDiv.innerHTML = '';

if (!Array.isArray(incoming)) {
  incomingDiv.textContent = "Aucune demande reçue ou erreur.";
  console.error("❌ Réponse attendue sous forme de tableau mais reçu :", incoming);
  return;
}

incoming.forEach(d => {
  const div = document.createElement('div');
  div.innerHTML = `
    <div class="border p-2 rounded shadow-sm flex justify-between items-center">
      <span>Demande de <strong>${d.display_name}</strong></span>
      <div>
        <button onclick="acceptFriend(${d.id})" class="bg-green-500 text-white px-2 py-1 rounded mr-2">Accepter</button>
        <button onclick="rejectFriend(${d.id})" class="bg-red-500 text-white px-2 py-1 rounded">Refuser</button>
      </div>
    </div>`;
  incomingDiv.appendChild(div);
});

      
      // Liste d’amis
      const res2 = await fetch(`/users/friends/${userId}`);
      const friends = await res2.json();
      const friendsDiv = document.getElementById('friend-list');
      friendsDiv.innerHTML = '';
      console.log("👫 Données amis reçues :", friends);
      friends.forEach(f => {
  const isRequester = f.requester_id == userId;
  const friendName = isRequester ? f.to_user : f.from_user;
  const friendId = isRequester ? f.addressee_id : f.requester_id;

  const div = document.createElement('div');
  div.innerHTML = `
    <div class="border p-2 rounded shadow-sm flex items-center justify-between">
      <div class="flex items-center space-x-2">
        <img src="/default.png" alt="Avatar" class="w-10 h-10 rounded-full">
        <span class="font-semibold">${friendName}</span>
      </div>
      <a href="/users/${friendId}" class="text-blue-500 hover:underline">Voir profil</a>
    </div>
  `;
  friendsDiv.appendChild(div);
});


      console.log("🔁 incoming:", incoming); // ← ici
}

async function acceptFriend(id) {
  await fetch(`/users/accept/${id}`, { method: 'PUT' });
  refreshFriendData();
}

async function rejectFriend(id) {
  await fetch(`/users/reject/${id}`, { method: 'DELETE' });
  refreshFriendData();
}

document.getElementById('user-id').addEventListener('change', refreshFriendData);
refreshFriendData();

</script>
</body>
</html>
